version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: crm_postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: testingpython/Dockerfile
    container_name: crm_django_web
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL...'
        python manage.py wait_for_db
        echo 'PostgreSQL started'
        python manage.py migrate
        python manage.py collectstatic --noinput
        echo 'Creating superuser if it does not exist...'
        python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@example.com', 'admin123')\"
        gunicorn testingpython.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_react_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
